#include <stdio.h>

#define M 10
#define N 8

int matrix[10][8] = {
        { -2, 1, 4, 7, 10, 13, 17, 20 },
		{ -2, 1, 4, 7, 10, 13, 17, 20 },
		{ -2, 1, 4, 7, 10, 14, 17, 20 },
		{ -1, 2, 5, 7, 11, 14, 17, 20 },
		{ -1, 2, 5, 8, 11, 14, 18, 21 },
		{ -1, 2, 5, 8, 11, 14, 18, 21 }, 
		{ -1, 3, 5, 8, 12, 15, 18, 21 }, 
		{ 0, 3, 6, 8, 12, 16, 19, 22 },
		{ 0, 3, 6, 9, 12, 16, 19, 22 },                                               
        { 0, 3, 6, 9, 12, 16, 19, 22 }};

int matrix_test[5][4] = {
        { -2, 1, 4, 7,  },
		{ -2, 1, 4, 7,  },
		{ -2, 1, 4, 7,  },
		{ -1, 2, 5, 7,  },
		{ -1, 2, 5, 8  }};
		
		
int BinarSearch(int **arr, int rows, int cols, int key)
{

int first,last,mid,temp;
 
  for (int i=0; i<rows; i++) {
    first = 0;
    last = cols;   
    while (first < last) {
        
         mid = (first + last) / 2;
 
        if (key <= arr[i][mid])
            last = mid;
        else
            first = mid + 1;
    }
     if ( arr[i][last] == key) {
        printf("Found value");
        return "petro";
        goto stop;
        
    } else {
       printf("Value not found");
       return "petro  not found";
     goto stop;
    }
 
    stop: printf( "Jumped to stop" );
}

}
int main(void) {
//    int col = 0, key;
//    printf("Input your key: ");
//    scanf("%d", &key);
//    if (key < -2 || key > 22) {
//        printf("Your key doesn't exist in matrix");
//        return 0;
//    }
    
  BinarSearch(matrix, 10, 8, 16);  
//    while (col < 8) {
//        int low = 0, high = 9, mid = (low + high) / 2;
//        while (low <= high) {
//            if (matrix[mid][col] == key) {
//                printf("Found key at coord [%d, %d]\n", col, mid);
//                break;
//            }
//            else if (matrix[mid][col] > key) {
//                low = mid + 1;
//            }
//            else if (matrix[mid][col] < key) {
//                high = mid - 1;
//            }
//            mid = (low + high) / 2;
//        }
//        col++;
    //}
    return 0;
}